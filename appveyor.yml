environment:
    global:
        # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
        # /E:ON and /V:ON options are not enabled in the batch script intepreter
        # See: http://stackoverflow.com/a/13751649/163740
        CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
        GDAL_HOME: "C:\\gdal"
        PYTHONWARNINGS: "ignore:DEPRECATION::pip._internal.cli.base_command"
        ENABLE_DEPRECATED_DRIVER_GTM: "YES"
        
#     matrix:
#         - PYTHON: "C:\\Python38-x64"
#           PYTHON_VERSION: "3.8"
#           PYTHON_ARCH: "64"
#           GDAL_VERSION: "2.4.3"
    matrix:
        # PYTHON_VERSION and PYTHON_ARCH are required by run_with_env.cmd.
        # The 4-digit number in the GISInternals archives is the MSVC version used to build
        # the libraries. It does not need to match the version of MSVC used to build Python.
        # https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B#Internal_version_numbering
        # Test all supported gdal minor versions (except latest stable) with one python version
        - PYTHON: "C:\\Python38-x64"
          PYTHON_VERSION: "3.8"
          PYTHON_ARCH: "64"
          GDAL_VERSION: "2.4.3"
          GIS_INTERNALS: "release-1911-x64-gdal-2-4-3-mapserver-7-4-2.zip"
          GIS_INTERNALS_LIBS: "release-1911-x64-gdal-2-4-3-mapserver-7-4-2-libs.zip"

#         - PYTHON: "C:\\Python38-x64"
#           PYTHON_VERSION: "3.8"
#           PYTHON_ARCH: "64"
#           GDAL_VERSION: "3.0.4"
#           GIS_INTERNALS: "release-1911-x64-gdal-3-0-4-mapserver-7-4-3.zip"
#           GIS_INTERNALS_LIBS: "release-1911-x64-gdal-3-0-4-mapserver-7-4-3-libs.zip"
#           PROJ_LIB: "C:\\gdal\\bin\\proj6\\share"

#         # Test all supported python versions with latest stable gdal release
#         - PYTHON: "C:\\Python36-x64"
#           PYTHON_VERSION: "3.6"
#           PYTHON_ARCH: "64"
#           GDAL_VERSION: "3.1.2"
#           GIS_INTERNALS: "release-1911-x64-gdal-3-1-2-mapserver-7-6-1.zip"
#           GIS_INTERNALS_LIBS: "release-1911-x64-gdal-3-1-2-mapserver-7-6-1-libs.zip"
#           PROJ_LIB: "C:\\gdal\\bin\\proj6\\share"

  # postgres
  POSTGRES_PORT: tcp://localhost:5432
  POSTGRES_ENV_POSTGRES_USER: postgres
  POSTGRES_ENV_POSTGRES_PASSWORD: Password12!
  POSTGRES_ENV_POSTGRES_DB: testdb_retriever
  POSTGRES_PATH: C:\Program Files\PostgreSQL\9.4
  PGUSER: postgres
  PGPASSWORD: Password12!

  # mysql
  MYSQL_PORT: tcp://localhost:3306
  MYSQL_ENV_MYSQL_USER: root
  MYSQL_ENV_MYSQL_PASSWORD: Password12!
  MYSQL_ENV_MYSQL_DATABASE: sqlectron
  MYSQL_PATH: C:\Program Files\MySql\MySQL Server 5.7
  MYSQL_PWD: Password12!

services:
  - mysql
  - postgresql94

init:
  - SET PATH=%POSTGRES_PATH%\bin;%MYSQL_PATH%\bin;%PATH%
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%
  - SET PYTHONPATH=%PYTHON%\\Lib\\site-packages;%PYTHONPATH%

install:
  - ps: mkdir C:\build | out-null
  - ps: mkdir C:\gdal | out-null
  - "SET PATH=C:\\gdal;C:\\gdal\\bin;C:\\gdal\\data;C:\\gdal\\bin\\gdal\\apps;%PATH%"
  - "SET GDAL_DATA=C:\\gdal\\bin\\gdal-data"
  - "SET PACKAGE_DATA=1" 
  
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"
  - "%PYTHON%\\python.exe -m pip install codecov"
  - "%PYTHON%\\python.exe -m pip install nose-cov"
  - "%PYTHON%\\python.exe -m pip install -U pytest"
  - "%PYTHON%\\python.exe -m pip install -U flake8"
  - "%PYTHON%\\python.exe -m pip install -U yapf"
  - "%PYTHON%\\python.exe -m pip install -U pylint"
  - "%PYTHON%\\python.exe -m  pip --version"
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - echo localhost:*:testdb_retriever:postgres:Password12! > C:\Program Files\PostgreSQL\9.4\pgpass.conf
  - echo "localhost:*:testdb_retriever:postgres:Password12!" > pgpass.conf
  - echo "localhost:*:testdb_retriever:postgres:Password12!" > %userprofile%\pgpass.conf
  - SET PGPASSFILE=C:\Program Files\PostgreSQL\9.4\pgpass.conf
  - set PGPASSWORD=Password12!

build_script:
  # postgres
  - createdb testdb_retriever
  # mysql
  - mysql -e "create database sqlectron;" --user=root
  - mysql -e "CREATE USER 'travis'@'localhost';GRANT ALL PRIVILEGES ON *.* TO 'travis'@'localhost';GRANT FILE ON *.* TO 'travis'@'localhost';" -uroot
  - dir
  - cd C:\projects\retriever
  - "python setup.py install"
  - echo "Installed retriever:"
  - retriever --version
  - cd C:\projects\retriever

test_script:
  - py.test -v -k "not test_download_archive and not test_postgres_spatial" 2>&1
  - flake8 --ignore=E501,W503,E402,F401,F403,E722,F841,W504 retriever --max-line-length=90 2>&1
  - yapf --recursive retriever/ --style=.style.yapf -d 2>&1
#  - pylint -rn retriever/ -f colorized --rcfile=.pylintrc
